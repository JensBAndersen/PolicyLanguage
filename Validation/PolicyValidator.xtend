/*
 * generated by Xtext 2.16.0
 */
package com.ffu.validation

import org.eclipse.xtext.validation.Check
import com.ffu.policy.EntityProperty
import com.ffu.policy.EntityPolicy
import com.ffu.policy.Property
import com.ffu.policy.PolicyPackage.Literals
import org.eclipse.xtext.EcoreUtil2
import com.ffu.policy.EntityPropertyRef
import com.ffu.policy.EntityRef

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class PolicyValidator extends AbstractPolicyValidator {
	
//	public static val INVALID_NAME = 'invalidName'
//
//	@Check
//	def checkGreetingStartsWithCapital(EntityPolicy entityPolicy) {
//		println(entityPolicy.entity.name)
//		println(entityPolicy.require.eAllContents.filter(EntityProperty).next.entity.get(0).name)
//		
//		if (!entityPolicy.entity.name.equals(entityPolicy.require.eAllContents.filter(EntityProperty).next.entity.get(0).name)) {
//			error('Entities do not match', Literals.ENTITY_POLICY__REQUIRE)
//		}
//	}

@Check
	def checkEntityPropertyRefIsAProperty(EntityPropertyRef entityPropertyRef) {	
		if (entityPropertyRef.ref === null) {
			switch(entityPropertyRef.propertyRef.type){
				EntityRef: error('Can not reference an Object', Literals.ENTITY_PROPERTY_REF__PROPERTY_REF)
			}
		}
	}
	
	@Check
	def checkGreetingStartsWith(EntityProperty entityProperty) {
//		println(entityProperty.entity.name)
//		println(entityProperty.eContainer)
//		println(entityProperty.eContainer.eContainer)
//		println(entityProperty.eContainer.eContainer.eContainer)
			
		var test = EcoreUtil2.getContainerOfType(entityProperty, EntityPolicy)
		
//		println(test.entity.name)

		
		if (!entityProperty.entity.name.equals(test.entity.name)) {
			error('Entities do not match', Literals.ENTITY_PROPERTY__ENTITY)
		}
	}
	
}
